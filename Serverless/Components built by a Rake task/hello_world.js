/* Generated by Opal 0.11.4 */
(function(Opal) {
  var TMP_6, self = Opal.top, $nesting = [], nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2;

  Opal.add_stubs(['$include', '$render', '$HelloWorld', '$H2', '$on', '$BUTTON', '$alert', '$ready?', '$[]', '$create_element']);
  
  (function($base, $super, $parent_nesting) {
    function $HyperComponent(){};
    var self = $HyperComponent = $klass($base, $super, 'HyperComponent', $HyperComponent);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting);

    return self.$include(Opal.const_get_qualified(Opal.const_get_relative($nesting, 'Hyperstack'), 'Component'))
  })($nesting[0], null, $nesting);
  (function($base, $super, $parent_nesting) {
    function $TopLevelComponent(){};
    var self = $TopLevelComponent = $klass($base, $super, 'TopLevelComponent', $TopLevelComponent);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_TopLevelComponent_1;

    return $send(self, 'render', [Opal.const_get_relative($nesting, 'DIV')], (TMP_TopLevelComponent_1 = function(){var self = TMP_TopLevelComponent_1.$$s || this;

    return self.$HelloWorld()}, TMP_TopLevelComponent_1.$$s = self, TMP_TopLevelComponent_1.$$arity = 0, TMP_TopLevelComponent_1))
  })($nesting[0], Opal.const_get_relative($nesting, 'HyperComponent'), $nesting);
  (function($base, $super, $parent_nesting) {
    function $HelloWorld(){};
    var self = $HelloWorld = $klass($base, $super, 'HelloWorld', $HelloWorld);

    var def = self.$$proto, $nesting = [self].concat($parent_nesting), TMP_HelloWorld_2;

    return $send(self, 'render', [Opal.const_get_relative($nesting, 'DIV')], (TMP_HelloWorld_2 = function(){var self = TMP_HelloWorld_2.$$s || this, TMP_3, TMP_4, TMP_5;

    
      $send(self, 'H2', [], (TMP_3 = function(){var self = TMP_3.$$s || this;

      return "Hello World from precompiled component"}, TMP_3.$$s = self, TMP_3.$$arity = 0, TMP_3));
      return $send($send(self, 'BUTTON', [], (TMP_4 = function(){var self = TMP_4.$$s || this;

      return "Click me"}, TMP_4.$$s = self, TMP_4.$$arity = 0, TMP_4)), 'on', ["click"], (TMP_5 = function(){var self = TMP_5.$$s || this;

      return self.$alert("hello")}, TMP_5.$$s = self, TMP_5.$$arity = 0, TMP_5));}, TMP_HelloWorld_2.$$s = self, TMP_HelloWorld_2.$$arity = 0, TMP_HelloWorld_2))
  })($nesting[0], Opal.const_get_relative($nesting, 'HyperComponent'), $nesting);
  return $send(Opal.const_get_relative($nesting, 'Document'), 'ready?', [], (TMP_6 = function(){var self = TMP_6.$$s || this, mount_point = nil;

  
    self.$include(Opal.const_get_qualified(Opal.const_get_relative($nesting, 'Hyperstack'), 'Component'));
    mount_point = Opal.const_get_relative($nesting, 'Element')['$[]']("#top_level_component");
    return Opal.const_get_relative($nesting, 'ReactAPI').$render(Opal.const_get_relative($nesting, 'ReactAPI').$create_element(Opal.const_get_relative($nesting, 'TopLevelComponent'), $hash2([], {})), mount_point);}, TMP_6.$$s = self, TMP_6.$$arity = 0, TMP_6));
})(Opal);
